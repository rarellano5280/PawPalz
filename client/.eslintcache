[{"/Users/robertarellano/bootcamp/PawPalz/client/src/index.js":"1","/Users/robertarellano/bootcamp/PawPalz/client/src/App.js":"2","/Users/robertarellano/bootcamp/PawPalz/client/src/reportWebVitals.js":"3","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Home.js":"4","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Walks.js":"5","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Signup.js":"6","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Palz.js":"7","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Account.js":"8","/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Login.js":"9","/Users/robertarellano/bootcamp/PawPalz/client/src/components/Header/index.js":"10","/Users/robertarellano/bootcamp/PawPalz/client/src/components/Footer/index.js":"11","/Users/robertarellano/bootcamp/PawPalz/client/src/components/UploadImage/UploadImage.js":"12","/Users/robertarellano/bootcamp/PawPalz/client/src/utils/mutations.js":"13","/Users/robertarellano/bootcamp/PawPalz/client/src/utils/queries.js":"14","/Users/robertarellano/bootcamp/PawPalz/client/src/utils/auth.js":"15","/Users/robertarellano/bootcamp/PawPalz/client/src/components/PostList/index.js":"16","/Users/robertarellano/bootcamp/PawPalz/client/src/components/PostForm/index.js":"17"},{"size":500,"mtime":1675570250524,"results":"18","hashOfConfig":"19"},{"size":1672,"mtime":1675620157890,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1675570250525,"results":"21","hashOfConfig":"19"},{"size":1741,"mtime":1675626883737,"results":"22","hashOfConfig":"19"},{"size":108,"mtime":1675570250525,"results":"23","hashOfConfig":"19"},{"size":2658,"mtime":1675570250525,"results":"24","hashOfConfig":"19"},{"size":105,"mtime":1675570250524,"results":"25","hashOfConfig":"19"},{"size":114,"mtime":1675570250524,"results":"26","hashOfConfig":"19"},{"size":2547,"mtime":1675570250524,"results":"27","hashOfConfig":"19"},{"size":1081,"mtime":1675625927397,"results":"28","hashOfConfig":"19"},{"size":497,"mtime":1675570250522,"results":"29","hashOfConfig":"19"},{"size":3907,"mtime":1675570250523,"results":"30","hashOfConfig":"19"},{"size":2216,"mtime":1675570250525,"results":"31","hashOfConfig":"19"},{"size":1037,"mtime":1675570250525,"results":"32","hashOfConfig":"19"},{"size":1043,"mtime":1675570250525,"results":"33","hashOfConfig":"19"},{"size":707,"mtime":1675570250523,"results":"34","hashOfConfig":"19"},{"size":2965,"mtime":1675570250523,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"c0wspr",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"/Users/robertarellano/bootcamp/PawPalz/client/src/index.js",[],["73","74"],"/Users/robertarellano/bootcamp/PawPalz/client/src/App.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/reportWebVitals.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Home.js",["75","76"],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Walks.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Signup.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Palz.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Account.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/pages/Login.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/components/Header/index.js",["77"],"/Users/robertarellano/bootcamp/PawPalz/client/src/components/Footer/index.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/components/UploadImage/UploadImage.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/utils/mutations.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/utils/queries.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/utils/auth.js",["78"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/robertarellano/bootcamp/PawPalz/client/src/components/PostList/index.js",[],"/Users/robertarellano/bootcamp/PawPalz/client/src/components/PostForm/index.js",["79"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS } from '../../utils/queries';\n\nconst PostForm = () => {\n  const [formState, setFormState] = useState({\n    postText: '',\n    postAuthor: '',\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    // All returning data from Apollo Client queries/mutations return in a `data` field, followed by the the data returned by the request\n    update(cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addPost({\n        variables: { ...formState },\n      });\n\n      setFormState({\n        postText: '',\n        postAuthor: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postText' && value.length <= 280) {\n      setFormState({ ...formState, [name]: value });\n      setCharacterCount(value.length);\n    } else if (name !== 'postText') {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12\">\n          <textarea\n            name=\"postText\"\n            placeholder=\"Here's a new post...\"\n            value={formState.postText}\n            className=\"form-input w-100\"\n            style={{ lineHeight: '1.5' }}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"col-12 col-lg-9\">\n          <input\n            name=\"postAuthor\"\n            placeholder=\"Add your name to get credit for the post...\"\n            value={formState.postAuthor}\n            className=\"form-input w-100\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n            Add Post\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":10,"column":8,"nodeType":"86","messageId":"87","endLine":10,"endColumn":10},{"ruleId":"84","severity":1,"message":"88","line":11,"column":8,"nodeType":"86","messageId":"87","endLine":11,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":13,"column":11,"nodeType":"91","endLine":13,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":41,"column":1,"nodeType":"94","endLine":41,"endColumn":34},{"ruleId":"84","severity":1,"message":"95","line":34,"column":15,"nodeType":"86","messageId":"87","endLine":34,"endColumn":19},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'bg' is defined but never used.","Identifier","unusedVar","'profile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]