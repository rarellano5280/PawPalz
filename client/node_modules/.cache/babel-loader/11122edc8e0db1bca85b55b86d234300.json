{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\bootcamp\\\\project\\\\Project-3\\\\PawPalz\\\\client\\\\src\\\\components\\\\ThoughtForm\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtForm = () => {\n  _s();\n  const [formState, setFormState] = useState({\n    thoughtText: '',\n    thoughtAuthor: ''\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, {\n    error\n  }] = useMutation(ADD_THOUGHT, {\n    // All returning data from Apollo Client queries/mutations return in a `data` field, followed by the the data returned by the request\n    update(cache, _ref) {\n      let {\n        data: {\n          addThought\n        }\n      } = _ref;\n      try {\n        const {\n          thoughts\n        } = cache.readQuery({\n          query: QUERY_THOUGHTS\n        });\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: {\n            thoughts: [addThought, ...thoughts]\n          }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  });\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data\n      } = await addThought({\n        variables: {\n          ...formState\n        }\n      });\n      setFormState({\n        thoughtText: '',\n        thoughtAuthor: ''\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'thoughtText' && value.length <= 280) {\n      setFormState({\n        ...formState,\n        [name]: value\n      });\n      setCharacterCount(value.length);\n    } else if (name !== 'thoughtText') {\n      setFormState({\n        ...formState,\n        [name]: value\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What's on your techy mind?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `m-0 ${characterCount === 280 || error ? 'text-danger' : ''}`,\n      children: [\"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-center\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"thoughtText\",\n          placeholder: \"Here's a new thought...\",\n          value: formState.thoughtText,\n          className: \"form-input w-100\",\n          style: {\n            lineHeight: '1.5'\n          },\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-9\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"thoughtAuthor\",\n          placeholder: \"Add your name to get credit for the thought...\",\n          value: formState.thoughtAuthor,\n          className: \"form-input w-100\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block py-3\",\n          type: \"submit\",\n          children: \"Add Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 my-3 bg-danger text-white p-3\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtForm, \"WDtVVXdK7Bw6KhPwvu0z2wUsy4g=\", false, function () {\n  return [useMutation];\n});\n_c = ThoughtForm;\nexport default ThoughtForm;\nvar _c;\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"names":["React","useState","useMutation","ADD_THOUGHT","QUERY_THOUGHTS","ThoughtForm","formState","setFormState","thoughtText","thoughtAuthor","characterCount","setCharacterCount","addThought","error","update","cache","data","thoughts","readQuery","query","writeQuery","e","console","handleFormSubmit","event","preventDefault","variables","err","handleChange","name","value","target","length","lineHeight"],"sources":["C:/Users/Owner/bootcamp/project/Project-3/PawPalz/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    thoughtText: '',\n    thoughtAuthor: '',\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    // All returning data from Apollo Client queries/mutations return in a `data` field, followed by the the data returned by the request\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: { ...formState },\n      });\n\n      setFormState({\n        thoughtText: '',\n        thoughtAuthor: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setFormState({ ...formState, [name]: value });\n      setCharacterCount(value.length);\n    } else if (name !== 'thoughtText') {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12\">\n          <textarea\n            name=\"thoughtText\"\n            placeholder=\"Here's a new thought...\"\n            value={formState.thoughtText}\n            className=\"form-input w-100\"\n            style={{ lineHeight: '1.5' }}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"col-12 col-lg-9\">\n          <input\n            name=\"thoughtAuthor\"\n            placeholder=\"Add your name to get credit for the thought...\"\n            value={formState.thoughtAuthor}\n            className=\"form-input w-100\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n            Add Thought\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}